{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PSEnv","text":"<p>A tool for managing AWS Parameter Store environments.</p>"},{"location":"#overview","title":"Overview","text":"<p>PSEnv is a command-line tool that simplifies the management of environment variables across different AWS environments using Parameter Store. It provides an easy way to:</p> <ul> <li>Synchronize local <code>.env</code> files with AWS Parameter Store</li> <li>Pull parameters from AWS and update your local environment</li> <li>Execute commands with parameters from AWS injected into the environment</li> <li>Support multiple AWS environments (development, testing, production)</li> </ul>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install psenv\n</code></pre>"},{"location":"#quick-start","title":"Quick Start","text":"<pre><code># Initialize a new psenv configuration\npsenv config init\n\n# Get parameters from Parameter Store\npsenv get --env dev\n\n# Put parameters to Parameter Store\npsenv put --env dev --sync\n\n# Execute a command with environment variables from Parameter Store\npsenv exec --env dev -- npm start\n</code></pre> <p>See the Getting Started guide for more detailed instructions.</p>"},{"location":"getting-started/","title":"Getting Started with PSEnv","text":"<p>This guide will help you get up and running with PSEnv to manage your AWS Parameter Store environments.</p>"},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.10 or higher</li> <li>AWS credentials configured locally</li> <li>AWS account with permissions to access Parameter Store</li> </ul>"},{"location":"getting-started/#installation","title":"Installation","text":"<p>Install PSEnv using pip:</p> <pre><code>pip install psenv\n</code></pre>"},{"location":"getting-started/#initial-setup","title":"Initial Setup","text":"<ol> <li>Create a PSEnv configuration file:</li> </ol> <pre><code>psenv config init\n</code></pre> <p>This will create a <code>psenv.yml</code> file in your current directory.</p> <ol> <li>Edit the configuration file to match your AWS environment structure:</li> </ol> <pre><code>envfile: .env\nroot_path: /your-app\nenvironments:\n  - name: dev\n    account: \"123456789012\"\n    envfile: .env.dev\n  - name: prod\n    account: \"987654321098\"\n    envfile: .env.prod\n</code></pre> <ol> <li>Make sure your AWS credentials are properly configured for accessing the accounts defined in your configuration.</li> </ol>"},{"location":"getting-started/#basic-usage","title":"Basic Usage","text":""},{"location":"getting-started/#pull-parameters-from-aws","title":"Pull Parameters from AWS","text":"<pre><code>psenv get --env dev\n</code></pre> <p>This will fetch parameters from the Parameter Store path specified in your configuration and save them to your <code>.env.dev</code> file.</p>"},{"location":"getting-started/#push-parameters-to-aws","title":"Push Parameters to AWS","text":"<pre><code>psenv put --env dev --sync\n</code></pre> <p>This will sync your local <code>.env.dev</code> file with the Parameter Store.</p>"},{"location":"getting-started/#execute-commands-with-parameters","title":"Execute Commands with Parameters","text":"<pre><code>psenv exec --env dev -- npm start\n</code></pre> <p>This will run the command <code>npm start</code> with environment variables loaded from Parameter Store.</p>"},{"location":"getting-started/#next-steps","title":"Next Steps","text":"<p>Check out the detailed documentation on:</p> <ul> <li>Configuration Options</li> <li>Command Reference</li> </ul>"},{"location":"usage/commands/","title":"Command Reference","text":"<p>This page provides detailed information about all PSEnv commands, their options, and usage examples.</p>"},{"location":"usage/commands/#global-options","title":"Global Options","text":"<p>These options are available for most commands:</p> <ul> <li><code>--env</code>: Specify the environment to work with (e.g., dev, prod)</li> <li><code>--config</code>: Path to the psenv.yml configuration file (defaults to ./psenv.yml)</li> </ul>"},{"location":"usage/commands/#command-get","title":"Command: <code>get</code>","text":"<p>Retrieves parameters from AWS Parameter Store and updates your local .env file.</p>"},{"location":"usage/commands/#usage","title":"Usage","text":"<pre><code>psenv get --env &lt;environment&gt;\n</code></pre>"},{"location":"usage/commands/#options","title":"Options","text":"<ul> <li><code>--env</code>: Required. The environment to get parameters for.</li> </ul>"},{"location":"usage/commands/#examples","title":"Examples","text":"<pre><code># Get parameters for the dev environment\npsenv get --env dev\n\n# Get parameters using a specific config file\npsenv get --env prod --config /path/to/psenv.yml\n</code></pre>"},{"location":"usage/commands/#command-put","title":"Command: <code>put</code>","text":"<p>Puts parameters from your local .env file into AWS Parameter Store.</p>"},{"location":"usage/commands/#usage_1","title":"Usage","text":"<pre><code>psenv put --env &lt;environment&gt; [--add|--update|--sync] [--dry-run]\n</code></pre>"},{"location":"usage/commands/#options_1","title":"Options","text":"<ul> <li><code>--env</code>: Required. The environment to put parameters for.</li> <li><code>--add</code>: Add new parameters only, without modifying existing ones.</li> <li><code>--update</code>: Add new parameters and update existing ones.</li> <li><code>--sync</code>: Add new, update existing, and remove parameters not in the local file.</li> <li><code>--dry-run</code>: Show what would be done without making any changes.</li> </ul>"},{"location":"usage/commands/#examples_1","title":"Examples","text":"<pre><code># Add new parameters only\npsenv put --env dev --add\n\n# Update existing parameters and add new ones\npsenv put --env dev --update\n\n# Fully synchronize (add, update, delete)\npsenv put --env dev --sync\n\n# Preview changes without applying them\npsenv put --env dev --sync --dry-run\n</code></pre>"},{"location":"usage/commands/#command-exec","title":"Command: <code>exec</code>","text":"<p>Execute a command with environment variables from Parameter Store.</p>"},{"location":"usage/commands/#usage_2","title":"Usage","text":"<pre><code>psenv exec --env &lt;environment&gt; -- &lt;command&gt; [arguments]\n</code></pre> <p>Important: You do not need the .env file locally to run a command with <code>exec</code>. The parameters will be pulled directly from AWS Parameter Store.</p>"},{"location":"usage/commands/#options_2","title":"Options","text":"<ul> <li><code>--env</code>: Required. The environment to get parameters from.</li> <li><code>--</code>: Separates psenv options from the command to execute.</li> </ul>"},{"location":"usage/commands/#examples_2","title":"Examples","text":"<pre><code># Run a Node.js application with dev environment variables\npsenv exec --env dev -- node server.js\n\n# Run a Docker container with prod environment variables\npsenv exec --env prod -- docker-compose up\n\n# Run a Python script with test environment variables\npsenv exec --env test -- python process_data.py\n</code></pre>"},{"location":"usage/commands/#command-inject","title":"Command: <code>inject</code>","text":"<p>Inject environment variables from your current shell session into a .env file.</p>"},{"location":"usage/commands/#usage_3","title":"Usage","text":"<pre><code>psenv inject [--prefix &lt;prefix&gt;]\n</code></pre>"},{"location":"usage/commands/#options_3","title":"Options","text":"<ul> <li><code>--prefix</code>: Filter environment variables by prefix.</li> </ul>"},{"location":"usage/commands/#examples_3","title":"Examples","text":"<pre><code># Inject all environment variables\npsenv inject\n\n# Inject only AWS_* environment variables\npsenv inject --prefix AWS_\n</code></pre>"},{"location":"usage/commands/#command-config","title":"Command: <code>config</code>","text":"<p>Manage psenv configuration.</p>"},{"location":"usage/commands/#usage_4","title":"Usage","text":"<pre><code>psenv config init [--force]\n</code></pre>"},{"location":"usage/commands/#options_4","title":"Options","text":"<ul> <li><code>--force</code>: Overwrite existing configuration file.</li> </ul>"},{"location":"usage/commands/#examples_4","title":"Examples","text":"<pre><code># Initialize a new psenv.yml file\npsenv config init\n\n# Force overwrite an existing psenv.yml file\npsenv config init --force\n</code></pre>"},{"location":"usage/commands/#best-practices","title":"Best Practices","text":"<p>PSEnv is designed with the following workflow in mind:</p> <ol> <li> <p>Use .env files for synchronization only: The .env files are intended as temporary synchronization points between your local environment and Parameter Store, not for long-term local storage.</p> </li> <li> <p>Prefer <code>exec</code> for running commands: Rather than sourcing .env files in your shell, use <code>psenv exec</code> to run commands with the environment variables loaded directly from Parameter Store.</p> </li> <li> <p>Use <code>put</code> with <code>--sync</code> for complete synchronization: When updating parameters, the <code>--sync</code> option ensures that your Parameter Store state exactly matches your local .env file.</p> </li> <li> <p>Preview changes with <code>--dry-run</code>: Before making changes to Parameter Store, use the <code>--dry-run</code> flag to preview what would be added, updated, or removed.</p> </li> </ol>"},{"location":"usage/configuration/","title":"Configuration Reference","text":"<p>This page provides detailed information about the <code>psenv.yml</code> configuration file, which is the central configuration for your PSEnv environment.</p>"},{"location":"usage/configuration/#overview","title":"Overview","text":"<p>The <code>psenv.yml</code> file defines:</p> <ul> <li>Default environment file location</li> <li>Parameter Store path structure</li> <li>AWS environment configurations</li> <li>Environment-specific settings</li> </ul>"},{"location":"usage/configuration/#file-structure","title":"File Structure","text":"<p>A typical <code>psenv.yml</code> file has the following structure:</p> <pre><code>envfile: .env\nroot_path: /my-app\nkms_key: alias/aws/ssm\nenvironments:\n  - name: dev\n    account: \"123456789012\"\n    envfile: .env.dev\n  - name: test\n    account: \"123456789012\"\n    envfile: .env.test\n  - name: prod\n    account: \"987654321098\"\n    envfile: .env.prod\n</code></pre>"},{"location":"usage/configuration/#configuration-options","title":"Configuration Options","text":""},{"location":"usage/configuration/#top-level-options","title":"Top-Level Options","text":"Option Description Default Required <code>envfile</code> Default .env file location <code>.env</code> Yes <code>root_path</code> Root path for Parameter Store parameters <code>/</code> Yes <code>kms_key</code> KMS key for parameter encryption <code>alias/aws/ssm</code> No <code>environments</code> List of environment configurations - Yes"},{"location":"usage/configuration/#environment-options","title":"Environment Options","text":"<p>Each entry in the <code>environments</code> list supports the following options:</p> Option Description Default Required <code>name</code> Environment name (e.g., dev, prod) - Yes <code>account</code> AWS account ID for this environment - Yes <code>envfile</code> Environment-specific .env file location Inherits from top-level <code>envfile</code> No <code>parameter_path</code> Environment-specific parameter path <code>{root_path}/{name}</code> No <code>kms_key</code> Environment-specific KMS key Inherits from top-level <code>kms_key</code> No"},{"location":"usage/configuration/#parameter-path-structure","title":"Parameter Path Structure","text":"<p>By default, parameters are stored in Parameter Store using the following path structure:</p> <pre><code>{root_path}/{environment_name}/{parameter_name}\n</code></pre> <p>For example, with <code>root_path: /my-app</code> and environment <code>dev</code>, the parameter <code>DATABASE_URL</code> would be stored at:</p> <pre><code>/my-app/dev/DATABASE_URL\n</code></pre>"},{"location":"usage/configuration/#example-configurations","title":"Example Configurations","text":""},{"location":"usage/configuration/#basic-configuration","title":"Basic Configuration","text":"<pre><code>envfile: .env\nroot_path: /my-app\nenvironments:\n  - name: dev\n    account: \"123456789012\"\n  - name: prod\n    account: \"987654321098\"\n</code></pre>"},{"location":"usage/configuration/#multi-environment-configuration-with-custom-files","title":"Multi-Environment Configuration with Custom Files","text":"<pre><code>envfile: .env\nroot_path: /my-app\nenvironments:\n  - name: dev\n    account: \"123456789012\"\n    envfile: .env.development\n  - name: test\n    account: \"123456789012\"\n    envfile: .env.test\n  - name: stage\n    account: \"567890123456\"\n    envfile: .env.staging\n  - name: prod\n    account: \"987654321098\"\n    envfile: .env.production\n</code></pre>"},{"location":"usage/configuration/#configuration-with-custom-kms-keys","title":"Configuration with Custom KMS Keys","text":"<pre><code>envfile: .env\nroot_path: /my-app\nkms_key: alias/my-app-default-key\nenvironments:\n  - name: dev\n    account: \"123456789012\"\n  - name: prod\n    account: \"987654321098\"\n    kms_key: alias/my-app-prod-key\n</code></pre>"},{"location":"usage/configuration/#configuration-with-custom-parameter-paths","title":"Configuration with Custom Parameter Paths","text":"<pre><code>envfile: .env\nroot_path: /my-app\nenvironments:\n  - name: dev\n    account: \"123456789012\"\n    parameter_path: /development/my-app\n  - name: prod\n    account: \"987654321098\"\n    parameter_path: /production/my-app\n</code></pre>"},{"location":"usage/configuration/#best-practices","title":"Best Practices","text":"<ol> <li> <p>Use consistent naming: Keep environment names consistent (dev, test, prod) throughout your organization.</p> </li> <li> <p>Use specific environment files: Define environment-specific .env files (like <code>.env.dev</code>, <code>.env.prod</code>) to avoid accidentally mixing parameters from different environments.</p> </li> <li> <p>Validate AWS accounts: Always double-check AWS account IDs to ensure you're targeting the correct account for each environment.</p> </li> <li> <p>Parameter path organization: Structure your parameter paths logically, typically organizing by application and environment.</p> </li> <li> <p>KMS key management: For production environments, consider using a dedicated KMS key with stricter access controls.</p> </li> </ol>"},{"location":"usage/configuration/#creating-or-updating-the-configuration","title":"Creating or Updating the Configuration","text":"<p>You can create a new configuration file using the init command:</p> <pre><code>psenv config init\n</code></pre> <p>This will create a template <code>psenv.yml</code> file in your current directory that you can customize to your needs.</p>"}]}